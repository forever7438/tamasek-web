/*jslint browser: true, fudge: true, long: true */
/*global $, blacksunplc, document, jQuery, location, setTimeout, window */

(function() {
    "use strict";

    var arrays = blacksunplc.arrays; // import * as arrays   from "module:blacksunplc/arrays"
    var security = blacksunplc.security; // import * as security from "module:blacksunplc/security"

    /** @const */
    var PREVIEW_SPEED = 600;

    jQuery(function($) {

        var previewHeight;
        var clicked = false;

        /* FOR iPhone6 Safari */
        var mainWindowHeight = 0;
        var mainWindowWidth = 0;

        function enablePreview() {

            var $linkGridThumbnailWrappers = $(".gridtabs .link-grid-item").not(".no-content").find(".link-grid-thumbnail-wrapper");
            $linkGridThumbnailWrappers.on("click", function( /** !jQuery.Event */ event) {
                var $linkGridThumbnailWrapper = $(event.currentTarget);
                if (clicked === false) {
                    clicked = true;
                    var $element = $linkGridThumbnailWrapper.closest(".element");
                    previewHeight = /** @type {number} */ ($element.find(".link-grid-content").height());
                    if ($element.hasClass("active")) {
                        hidePreview($element);
                    } else {
                        setTimeout(function() {

                            showPreview($element);
                        }, 500);
                    }
                }

                event.stopPropagation();
                event.preventDefault();
            });

            checkResizeEvent();

            $(window).on("resize", function() {
                if (checkResizeEvent()) {
                    resetPreview();
                }
            });
        }

        /**
         * This function checks that the resizing comes from the hide
         * the mobile browser's bar or real resize of the window.
         * @return {boolean}
         */
        function checkResizeEvent() {
            var winHeight = /** @type {number} */ ($(window).height());
            var winWidth = /** @type {number} */ ($(window).width());

            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera\sMini/i.test(window.navigator.userAgent)) {
                /* mobile */
                if (Math.abs(mainWindowHeight - winHeight) > 96 || Math.abs(mainWindowWidth - winWidth) > 60) {
                    mainWindowHeight = winHeight;
                    mainWindowWidth = winWidth;
                    return true;
                }
                return false;
            }

            /* desktop */
            if (Math.abs(mainWindowWidth - winWidth) > 60) {
                mainWindowHeight = winHeight;
                mainWindowWidth = winWidth;
                return true;
            }
            return false;
        }

        /**
         * @param {!jQuery} $targetElement
         */
        function showPreview($targetElement) {

            var $wrapper = $targetElement.find(".link-grid-thumbnail-wrapper");
            var hash = /** @type {string} */ ($wrapper.attr("id"));

            if ($(".link-grid-content").is(":visible")) {

                arrays.forEach($(".gridtabs .element"), function(element) {

                    var $element = $(element);

                    if ($element.find(".link-grid-content").is(":visible")) {

                        var elementHeight = /** @type {number} */ ($element.height());
                        var contentHeight = /** @type {number} */ ($element.find(".link-grid-content").height());

                        $element.stop();
                        $element.animate({ "height": elementHeight - contentHeight }, PREVIEW_SPEED);
                        $element.find(".link-grid-content").stop().animate({ "height": "toggle" }, PREVIEW_SPEED, function() {

                            $(".gridtabs .element").removeClass("active inactive");
                            $(".gridtabs .element").not($targetElement).addClass("inactive");

                            /* SECURITY - Cross-site scripting in DOM - Accepted; reviewed by lreynolds on 2017-08-29
                             * The hash value set here is created from the id of the selected tab and the id attribute
                             * on the "link-grid-thumbnail-wrapper" within the clicked element.
                             * So we can be confident that these are safe as they must be associated with the grid tabs
                             * component.
                             */
                            location.hash = hash;

                            var $linkGridContent = $targetElement.find(".link-grid-content");
                            var linkGridContentTop = $targetElement.height() + $targetElement.position().top;

                            $targetElement.addClass("active");
                            $targetElement.animate({ "height": $targetElement.height() + previewHeight }, PREVIEW_SPEED);

                            $linkGridContent.css("top", linkGridContentTop);
                            $linkGridContent.animate({ "height": "toggle" }, PREVIEW_SPEED);
                            $linkGridContent.promise().done(function() {

                                var offsetValue = $targetElement.offset().top - 70;

                                // if ($("body").hasClass("news-and-resources")) {
                                //     offsetValue = offsetValue - 70
                                // }

                                $("html, body").animate({
                                    scrollTop: offsetValue - 20
                                }, 500, function() {
                                    $("header").removeClass("fixed-header");
                                    $(".story-heading-sticky").css("top", 0);
                                    $("html, body").animate({
                                        scrollTop: offsetValue
                                    }, 0);
                                });


                                clicked = false;
                            });

                        });
                    }
                });

            } else {

                $(".gridtabs .element").not($targetElement).addClass("inactive");

                /* SECURITY - Cross-site scripting in DOM - Accepted; reviewed by lreynolds on 2017-08-29
                 * The hash value set here is created from the id of the selected tab and the id attribute
                 * on the "link-grid-thumbnail-wrapper" within the clicked element.
                 * So we can be confident that these are safe as they must be associated with the grid tabs
                 * component.
                 */
                location.hash = hash;

                var $linkGridContent = $targetElement.find(".link-grid-content");
                var linkGridContentTop = $targetElement.height() + $targetElement.position().top;

                $targetElement.addClass("active");
                $targetElement.animate({ "height": $targetElement.height() + previewHeight }, PREVIEW_SPEED);

                $linkGridContent.css("top", linkGridContentTop);
                $linkGridContent.animate({ "height": "toggle" }, PREVIEW_SPEED);
                $linkGridContent.promise().done(function() {

                    var offsetValue = $targetElement.offset().top;
                    if ($("body").hasClass("news-and-resources")) {
                        offsetValue = offsetValue - 70
                    }
                    $("html, body").animate({
                        scrollTop: offsetValue - 20
                    }, 500, function() {
                        $("html, body").animate({
                            scrollTop: offsetValue
                        }, 0);
                    });

                    clicked = false;
                });
            }
        }

        /**
         * @param {!jQuery} $targetElement
         */
        function hidePreview($targetElement) {
            var targetElementHeight = /** @type {number} */ ($targetElement.height());
            var contentHeight = /** @type {number} */ ($targetElement.find(".link-grid-content").height());
            $targetElement.stop();
            $targetElement.animate({ "height": targetElementHeight - contentHeight }, PREVIEW_SPEED);
            $targetElement.find(".link-grid-content").stop().animate({ "height": "toggle" }, PREVIEW_SPEED, function() {
                $(".gridtabs .element").removeClass("active inactive");
                clicked = false;
            });
        }

        function resetPreview() {
            arrays.forEach($(".gridtabs .element"), function(element) {
                var $element = $(element);
                $element.removeAttr("style").removeClass("active inactive");
                $element.find(".link-grid-content").hide().removeAttr("style");
            });
        }

        function setGrid() {
            $('.link-grid-items .wrapper').each(function(key, value) {
                var rows = $(this).attr('data-rows-config');

                if (rows) {
                    var $data = JSON.parse(rows),
                        $element = '';

                    if ($data) {
                        $.each($data, function(key, val) {
                            $element = "<div class='item-row " + key + "'></div>";

                            if ($(value).find('.item-row').length > 0) {
                                $('.item-row').last().after($element);

                            } else {
                                $(value).prepend($element);
                            }

                            for (let i = 0; i < val; i++) {
                                var children = $(value).find(' > .element')[0];
                                $(value).find('.' + key).append(children);
                            }
                        });
                    }
                }
            });
            $('.link-grid-items .wrapper').css('opacity', 1);
        }

        enablePreview();
        $('.link-grid-items .wrapper').css('opacity', 0);
        setTimeout(setGrid, 1000);

    });

    $(window).on("load", function() {

        /*
         * SECURITY - Cross-site scripting in DOM - Accepted; reviewed by lreynolds on 2017-08-29
         * In both cases below the hash is only used for finding elements in a restricted context.
         */
        var hash = security.safeLocationHash();
        if (!hash) {
            return;
        }

        hash = hash.replace("#", "");

        /* Tab and Grid references */
        var linkGridThumbnailWrapper = document.getElementById(hash);
        if (linkGridThumbnailWrapper) {
            var tabbedContentDataId = $(linkGridThumbnailWrapper).parents(".tabbed-content-data").attr("id");


            $(".tabbed-content-tab a[href='#" + tabbedContentDataId + "']").trigger("click");
            var handler = function() {
                linkGridThumbnailWrapper.click();
            };
            /* A little more than the `PREVIEW_SPEED` value. */
            setTimeout(handler, PREVIEW_SPEED + 100);


        }
    });

}());