/*jslint browser: true, fudge: true, long: true */
/*global AmCharts, blacksunplc, document, encodeURI, jQuery, location, setTimeout, window */

jQuery(function ($) {
	"use strict";
	var dateFormat = $("#maturityTable").attr("data-date-format").toUpperCase();
	var emptyMessage = $("#maturityTable").data("none-selected");
	var noRecordMessage = $("#maturityTable").data("no-records");

	if($(window).width() > 1180) {
		$(window).on('resize',function(){location.reload();});
	} else {
		$(window).bind('orientationchange', function (event) {
			location.reload(true);
		});
	}
	
	function chartIsRendered() {
		var table = $("#maturityTable").DataTable({
			orderCellsTop: true,
			fixedHeader: true,
			bLengthChange: false,
			paging: false,
			info: false,
			ordering: true,
			language: {
				zeroRecords: noRecordMessage
			},
			columnDefs: [{
				targets: [6, 7], // Assuming the date column is the first column (index 0)
				render: function (data, type, full, meta) {
					if (type === "sort") {
						return moment(data, dateFormat).format("YYYYMMDD");
					}
					return moment(data, dateFormat).format(dateFormat);
				}
			}]
		});

		$(".dataTables_filter", table.table().container()).hide();

		var issuerdd = $("#maturity_dd_issuer");
		var issuerddBtn = issuerdd.find("button");
		var issuerCheckboxes = issuerdd.find("input[name='maturityissuer']");
		var selectedIssuer = [];
		var chartStr = "";

		var currencydd = $("#maturity_dd_currency");
		var currencyddBtn = currencydd.find("button");
		var currencyCheckboxes = currencydd.find("input[name='maturitycurrency']");
		var selectedCurrency = [];
		var selectedCurrencyPaths = [];
		var selectedCurrencyForTable = [];

		var maturitydd = $("#maturity_dd_maturity");
		var maturityBtn = maturitydd.find("button");
		var maturityCheckboxes = maturitydd.find("input[name='maturitydatefilter']");
		var maturityOptions = [];
		var maturityArr = [];

		var filtersParent = $("#chartdiv_filters");
		var filterYmat = filtersParent.find("#chartdiv_filter_ymat");
		var filterNmat = filtersParent.find("#chartdiv_filter_nmat");

		currencyddBtn.on("click.currencydd", function () {
			currencydd.toggleClass("open");
		});
		issuerddBtn.on("click.currencydd", function () {
			issuerdd.toggleClass("open");
		});
		maturityBtn.on("click.currencydd", function () {
			maturitydd.toggleClass("open");
		});

		$(document).on("click.currencydd touchstart.currencydd", e => {
			if (!$(e.target).closest(currencydd).length) {
				currencydd.removeClass("open");
			}
			if (!$(e.target).closest(issuerdd).length) {
				issuerdd.removeClass("open");
			}
			if (!$(e.target).closest(maturitydd).length) {
				maturitydd.removeClass("open");
			}
		});
		table.column(7).data().each(function (v) {
			maturityArr.push(v);
		});

		maturityCheckboxes.on("change.currencydd", function () {
			maturityOptions = [];
			maturityArr = [];
			chartStr = "";
			filterYmat.removeClass("is-active");
			filterNmat.removeClass("is-active");
			$.each(maturityCheckboxes, function () {
				if ($(this).is(":checked")) {
					maturityOptions.push($.fn.dataTable.util.escapeRegex($(this).val().toLowerCase()));
				}
			});
			if (maturityOptions.length === 1 && maturityOptions[0] === "ymat") {
				filterYmat.addClass("is-active");
			}
			if (maturityOptions.length === 1 && maturityOptions[0] === "nmat") {
				filterNmat.addClass("is-active");
			}
			if (maturityOptions.length === 2) {
				filterYmat.addClass("is-active");
				filterNmat.addClass("is-active");
			}
			table.column(7).data().each(function (v) {
				if (maturityOptions.length === 1) {
					if (maturityOptions[0] === "ymat" && moment(new Date(), dateFormat) >= moment(v, dateFormat)) {
						maturityArr.push(v);
					}
					if (maturityOptions[0] === "nmat" && moment(new Date(), dateFormat) < moment(v, dateFormat)) {
						maturityArr.push(v);
					}
				}
				if (maturityOptions.length === 2) {
					maturityArr.push(v);
				}
			});
			highlightChartEntries();
			for (var mCount = 0; mCount < maturityArr.length; mCount++) {
				chartStr += mCount === 0 ? maturityArr[mCount] : "|" + maturityArr[mCount];
			}
			chartStr.length > 0 ? table.column(7).search("^(" + chartStr + ")$", true, false).draw() : table.column(7).search("nothing", true, false).draw();
			
			checkCheckboxes();
		});

		issuerCheckboxes.each(function (ignore, v) {
			selectedIssuer.push($.fn.dataTable.util.escapeRegex($(v).val().toLowerCase()));
		});

		issuerCheckboxes.on("change.currencydd", function () {
			selectedIssuer = [];
			chartStr = "";

			$.each(issuerCheckboxes, function () {
				if ($(this).is(":checked")) {
					selectedIssuer.push($.fn.dataTable.util.escapeRegex($(this).val().toLowerCase()));
					$("#chartdiv_filters .issuer ul li:contains(" + $(this).val() + ")").addClass("is-active");
				} else {
					$("#chartdiv_filters .issuer ul li:contains(" + $(this).val() + ")").removeClass("is-active");
				}
			});

			highlightChartEntries();
			for (var cCount = 0; cCount < selectedIssuer.length; cCount++) {
				chartStr += cCount === 0 ? selectedIssuer[cCount] : "|" + selectedIssuer[cCount];
			}
			chartStr.length > 0 ? table.column(1).search("^(" + chartStr + ")$", true, false).draw() : table.column(1).search("nothing", true, false).draw();
			
			checkCheckboxes();
		});

		currencyCheckboxes.each(function (ignore, v) {
			selectedCurrency.push($.fn.dataTable.util.escapeRegex($(v).val().toLowerCase()));
			selectedCurrencyPaths.push($.fn.dataTable.util.escapeRegex($(this).val().toLowerCase()));
		});

		currencyCheckboxes.on("change.currencydd", function () {
			selectedCurrency = [];
			selectedCurrencyForTable = [];
			chartStr = "";
			$.each(currencyCheckboxes, function () {
				filtersParent.find("#chartdiv_filter_" + $.fn.dataTable.util.escapeRegex($(this).val().toLowerCase())).removeClass("is-active");
				if ($(this).is(":checked")) {
					selectedCurrency.push($.fn.dataTable.util.escapeRegex($(this).val().toLowerCase()));
					selectedCurrencyForTable.push($.fn.dataTable.util.escapeRegex($(this).attr("data-maturitycurrency").toLowerCase()));
				}
			});
			$.each(selectedCurrency, function (ic, vc) {
				filtersParent.find("#chartdiv_filter_" + vc).addClass("is-active");
			});
			highlightChartEntries();
			for (var cCount = 0; cCount < selectedCurrencyForTable.length; cCount++) {
				chartStr += cCount === 0 ? selectedCurrencyForTable[cCount] : "|" + selectedCurrencyForTable[cCount];
			}
			chartStr.length > 0 ? table.column(2).search(chartStr, true, false).draw() : table.column(2).search("nothing", true, false).draw();
			
			checkCheckboxes();
		});

		filtersParent.find("li").on("click", function() {
			var buttonVal = $(this).attr("id");

			if(buttonVal == "chartdiv_filter_ymat") {
				buttonVal = "ymat"
			}
			else if(buttonVal == "chartdiv_filter_nmat") {
				buttonVal = "nmat"
			}
			else {
				buttonVal = $(this).text();
			}

			$("#maturityTable input[value='"+buttonVal+"']").trigger("click");
		})

		function checkCheckboxes() {
			$(this).find(".empty").remove();

			$("#chartdiv_filters ul").each(function () {
				if ($(this).find(".is-active").length > 0) {
					$(this).parent().find(".empty").remove();
				} else {
					if($(this).parent().find(".empty").length < 1) {
						$(this).parent().append('<p class="empty">'+emptyMessage+'</p>');
					}
				}
			})

		}

		var allChartElemsCol = $(".amcharts-graph-column .amcharts-graph-column");
		var allChartElemsLinP = $(".amcharts-graph-line");
		var allChartElemsLin = $(".amcharts-graph-line .amcharts-graph-bullet");
		var allChartElemsLinStroke = $(".amcharts-graph-line .amcharts-graph-stroke");
		allChartElemsLinP.each(function (index1, value1) {
			var linchildren = $(value1).find(".amcharts-graph-bullet");
			var linStrokes = $(value1).find(".amcharts-graph-stroke");
			$.each(selectedCurrencyPaths, function (index2, value2) {
				if ($(value1).hasClass("amcharts-graph-" + value2 + "Coupon")) {
					linchildren.addClass("amcharts-graph-" + value2 + "Coupon");
					linStrokes.addClass("amcharts-graph-" + value2 + "Coupon");
				}
			});
		});
		var tempElementsCol;
		var tempElementsLin;
		var tempElementsLinClasses = "";
		var columnStr = "";
		var lineStr = "";
		var cCount = 0;
		var mStr = "";
		var iStr = "";
		var tempElementsLinClassesSplit = [];
		var tempElementsLinCoupon = "";
		var tempElementsLinCurr = "";
		function highlightChartEntries() {
			columnStr = "";
			lineStr = "";
			cCount = 0;
			mStr = "";
			iStr = "";
			tempElementsLinClasses = ""
			tempElementsCol = allChartElemsCol;
			tempElementsLin = allChartElemsLin;

			var grayOutIssuer = function () {

				for (cCount = 0; cCount < selectedIssuer.length; cCount++) {
					iStr += "." + selectedIssuer[cCount].replace(/[_\W]+/g, "-").toLocaleLowerCase() + ",";
				}
				tempElementsCol = allChartElemsCol.filter(iStr.slice(0, -1));
				tempElementsLin = allChartElemsLin.filter(iStr.slice(0, -1));

			};

			var grayOutCurrency = function () {
				allChartElemsLinP.find(".amcharts-graph-stroke").addClass("grayed-out");

				for (cCount = 0; cCount < selectedCurrency.length; cCount++) {
					columnStr += ".amcharts-graph-" + selectedCurrency[cCount] + "IssueSize,";
					lineStr += ".amcharts-graph-" + selectedCurrency[cCount] + "Coupon,";
				}
				tempElementsCol = tempElementsCol.filter(columnStr.slice(0, -1));
				tempElementsLin = tempElementsLin.filter(lineStr.slice(0, -1));

			};

			var grayOutMaturity = function () {
				for (cCount = 0; cCount < maturityArr.length; cCount++) {
					mStr += "." + classNameStr + moment(maturityArr[cCount], dateFormat).format("YYYY-MM-DD") + ",";
				}

				tempElementsCol = tempElementsCol.filter(mStr.slice(0, -1));
				tempElementsLin = tempElementsLin.filter(mStr.slice(0, -1));

				tempElementsLin.each(function (ignore, v3) {
					tempElementsLinClasses += $(v3).attr("class").split(" ").join(".") + ",";
				});
			};

			var checkBullets = function () {
				$(".amcharts-graph-line").each(function () {
					if ($(this).find(".amcharts-graph-bullet:not(.grayed-out)").length > 0) {
						tempElementsLinClassesSplit = $(this).attr("class").split(" ");
						tempElementsLinCoupon = tempElementsLinClassesSplit[tempElementsLinClassesSplit.length - 1].split("-");
						tempElementsLinCurr = tempElementsLinCoupon[tempElementsLinCoupon.length - 1].replace("Coupon", "");
						$(".amcharts-graph-stroke.amcharts-graph-" + tempElementsLinCurr + "Coupon").removeClass("grayed-out");

						// $("#chartdiv_filters >div").show();
					}
				});
			}

			// $("#chartdiv_filters >div").hide();

			allChartElemsCol.addClass("grayed-out");
			allChartElemsLin.addClass("grayed-out");
			allChartElemsLinStroke.addClass("grayed-out");
			selectedIssuer.length > 0 && grayOutIssuer();
			selectedCurrency.length > 0 && grayOutCurrency();
			maturityArr.length > 0 && grayOutMaturity();

			if (!(maturityArr.length === 0 || selectedCurrency.length === 0 || selectedIssuer.length === 0)) {
				tempElementsCol.removeClass("grayed-out");
				tempElementsLin.removeClass("grayed-out");
			}

			$.each(["usd", "sgp", "eur", "gbp"], function (ignore, curr) {
				if (tempElementsLinClasses.indexOf(curr + "Coupon") !== -1 && selectedCurrency.indexOf(curr) !== -1) {
					allChartElemsLinP.find(".amcharts-graph-stroke.amcharts-graph-" + curr + "Coupon").removeClass("grayed-out");
				}
			});

			checkBullets();

			if (maturityArr.length === 0 || selectedCurrency.length === 0 || selectedIssuer.length === 0) {
				allChartElemsLinP.find(".amcharts-graph-stroke").addClass("grayed-out");
			}
		}
	}

	var $chartDiv = $("#chartdiv");
	var balloonYear = $chartDiv.data("year-label");
	var balloonIssue = $chartDiv.data("issue-size-label");
	var balloonCoupon = $chartDiv.data("coupon-label");
	var dataProvider = $chartDiv.data("provider");
	var classNameStr = "amc_class_date_";
	var issuer = "";
	var usdArr = [];
	var eurArr = [];
	var sgdArr = [];
	var gbpArr = [];
	var cnhArr = [];

	$.each(dataProvider, function (ignore, v) {
		if (v.usdMaturityDate) {
			issuer = v.usdIssuer;
			issuer = issuer.replace(/[_\W]+/g, "-").toLocaleLowerCase();

			v.usdClassName = classNameStr + moment(v.usdMaturityDate, dateFormat).format("YYYY-MM-DD") + " " + issuer;
			usdArr.push(v.usdMaturityDate);
		}
		if (v.eurMaturityDate) {
			issuer = v.eurIssuer;
			issuer = issuer.replace(/[_\W]+/g, "-").toLocaleLowerCase();

			v.eurClassName = classNameStr + moment(v.eurMaturityDate, dateFormat).format("YYYY-MM-DD") + " " + issuer;
			eurArr.push(v.eurMaturityDate);
		}
		if (v.cnhMaturityDate) {
			issuer = v.cnhIssuer;
			issuer = issuer.replace(/[_\W]+/g, "-").toLocaleLowerCase();

			v.cnhClassName = classNameStr + moment(v.cnhMaturityDate, dateFormat).format("YYYY-MM-DD") + " " + issuer;
			cnhArr.push(v.cnhMaturityDate);
		}
		if (v.sgdMaturityDate) {
			issuer = v.sgdIssuer;
			issuer = issuer.replace(/[_\W]+/g, "-").toLocaleLowerCase();

			v.sgdClassName = classNameStr + moment(v.sgdMaturityDate, dateFormat).format("YYYY-MM-DD") + " " + issuer;
			sgdArr.push(v.sgdMaturityDate);
		}
		if (v.gbpMaturityDate) {
			issuer = v.gbpIssuer;
			issuer = issuer.replace(/[_\W]+/g, "-").toLocaleLowerCase();

			v.gbpClassName = classNameStr + moment(v.gbpMaturityDate, dateFormat).format("YYYY-MM-DD") + " " + issuer;
			gbpArr.push(v.gbpMaturityDate);
		}
	});

	var usdIssueSizeArr = [];
	var usdIssueSizeMax = 7;
	var sgdCouponArr = [];
	var sgdCouponMax = 7;

	try {
		$(dataProvider).each(function (index, value) {
			if (value.usdIssueSize) {
				usdIssueSizeArr.push(value.usdIssueSize);
			}
			if (value.sgdCoupon) {
				sgdCouponArr.push(value.sgdCoupon);
			}
		});
		usdIssueSizeMax = Math.max.apply(null, usdIssueSizeArr);
		sgdCouponMax = Math.max.apply(null, sgdCouponArr);
	} catch (ignore) {
		usdIssueSizeMax = 7;
		sgdCouponMax = 7;
	}

	usdIssueSizeMax = usdIssueSizeMax > 7 ? usdIssueSizeMax : 7;
	sgdCouponMax = sgdCouponMax > 7 ? sgdCouponMax : 7;
	// am chart start
	AmCharts.makeChart("chartdiv",
		{
			"type": "serial",
			"categoryField": "yearShort",
			"mouseWheelZoomEnabled": true,
			"zoomOutOnDataUpdate": false,
			"maxZoomFactor": 10,
			"zoomOutButtonImageSize": 12,
			"zoomOutButtonPadding": 5,
			"sequencedAnimation": false,
			"startDuration": 0.5,
			"startEffect": "easeInSine",
			"addClassNames": true,
			"autoDisplay": true,
			"precision": -1,
			"categoryAxis": {
				"gridPosition": "start",
				"gridThickness": 0,
				"minHorizontalGap": 25,
				"title": $chartDiv.data("xaxis-label")
			},
			"trendLines": [],
			"listeners": [{
				"event": "rendered",
				"method": chartIsRendered
			}],
			"graphs": [
				{
					"balloonColor": "#d50065",
					"balloonText": balloonYear + ": [[year]]\n" + balloonIssue + ": [[value]]",
					"classNameField": "sgdClassName",
					"fillAlphas": 1,
					"fillColors": "#d50065",
					"id": "sgdIssueSize",
					"lineColor": "#d50065",
					"title": "SGD Issue size",
					"type": "column",
					"valueAxis": "notionalIssueSize",
					"valueField": "sgdIssueSize",
					"visibleInLegend": false
				},
				{
					"balloonColor": "#d0c1d2",
					"balloonText": balloonYear + ": [[year]]\n" + balloonIssue + ": [[value]]",
					"classNameField": "usdClassName",
					"fillAlphas": 1,
					"fillColors": "#d0c1d2",
					"id": "usdIssueSize",
					"lineColor": "#d0c1d2",
					"title": "USD Issue size",
					"type": "column",
					"valueAxis": "notionalIssueSize",
					"valueField": "usdIssueSize",
					"visibleInLegend": false
				},
				{
					"balloonColor": "#22b7e9",
					"balloonText": balloonYear + ": [[year]]\n" + balloonIssue + ": [[value]]",
					"classNameField": "gbpClassName",
					"fillAlphas": 1,
					"fillColors": "#22b7e9",
					"id": "gbpIssueSize",
					"lineColor": "#22b7e9",
					"title": "GBP Issue size",
					"type": "column",
					"valueAxis": "notionalIssueSize",
					"valueField": "gbpIssueSize",
					"visibleInLegend": false
				},
				{
					"balloonColor": "#12a639",
					"balloonText": balloonYear + ": [[year]]\n" + balloonIssue + ": [[value]]",
					"classNameField": "eurClassName",
					"fillAlphas": 1,
					"fillColors": "#12a639",
					"id": "eurIssueSize",
					"lineColor": "#12a639",
					"title": "EUR Issue size",
					"type": "column",
					"valueAxis": "notionalIssueSize",
					"valueField": "eurIssueSize",
					"visibleInLegend": false
				},
				{
					"balloonColor": "#006ba6",
					"balloonText": balloonYear + ": [[year]]\n" + balloonIssue + ": [[value]]",
					"classNameField": "cnhClassName",
					"fillAlphas": 1,
					"fillColors": "#006ba6",
					"id": "cnhIssueSize",
					"lineColor": "#006ba6",
					"title": "CNH Issue size",
					"type": "column",
					"valueAxis": "notionalIssueSize",
					"valueField": "cnhIssueSize",
					"visibleInLegend": false
				},
				{
					"balloonColor": "#d50065",
					"balloonText": balloonYear + ": [[year]]\n" + balloonCoupon + ": [[value]]%",
					"bullet": "round",
					"bulletColor": "#d50065",
					"classNameField": "sgdClassName",
					"id": "sgdCoupon",
					"lineColor": "#d50065",
					"markerType": "circle",
					"maxBulletSize": 53,
					"title": "SGD Coupon",
					"valueAxis": "couponPercent",
					"valueField": "sgdCoupon"
				},
				{
					"balloonColor": "#d0c1d2",
					"balloonText": balloonYear + ": [[year]]\n" + balloonCoupon + ": [[value]]%",
					"bullet": "diamond",
					"bulletColor": "#d0c1d2",
					"bulletSize": 10,
					"classNameField": "usdClassName",
					"id": "usdCoupon",
					"lineColor": "#d0c1d2",
					"markerType": "diamond",
					"title": "USD Coupon",
					"valueAxis": "couponPercent",
					"valueField": "usdCoupon"
				},
				{
					"balloonColor": "#22b7e9",
					"balloonText": balloonYear + ": [[year]]\n" + balloonCoupon + ": [[value]]%",
					"bullet": "triangleUp",
					"bulletColor": "#22b7e9",
					"bulletSize": 10,
					"classNameField": "gbpClassName",
					"id": "gbpCoupon",
					"lineColor": "#22b7e9",
					"markerType": "triangleUp",
					"title": "GBP Coupon",
					"valueAxis": "couponPercent",
					"valueField": "gbpCoupon"
				},
				{
					"balloonColor": "#12a639",
					"balloonText": balloonYear + ": [[year]]\n" + balloonCoupon + ": [[value]]%",
					"bullet": "square",
					"bulletColor": "#12a639",
					"classNameField": "eurClassName",
					"gradientOrientation": "horizontal",
					"id": "eurCoupon",
					"lineColor": "#12a639",
					"title": "EUR Coupon",
					"valueAxis": "couponPercent",
					"valueField": "eurCoupon"
				},
				{
					"balloonColor": "#006ba6",
					"balloonText": balloonYear + ": [[year]]\n" + balloonCoupon + ": [[value]]%",
					"bullet": "custom",
					"bulletColor": "#006ba6",
					"bulletSize": 10,
					"customBullet": "/etc.clientlibs/temasek-corporate/clientlibs/base/resources/images/temasek-bonds/hex.svg",
					"classNameField": "cnhClassName",
					"id": "cnhCoupon",
					"lineColor": "#006ba6",
					"markerType": "triangleUp",
					"title": "CNH Coupon",
					"valueAxis": "couponPercent",
					"valueField": "cnhCoupon"
				},
			],
			"guides": [],
			"valueAxes": [
				{
					"axisFrequency": -3,
					"id": "notionalIssueSize",
					"maximum": usdIssueSizeMax,
					"minimum": 0,
					"precision": 0,
					"stackType": "regular",
					"gridThickness": 0,
					"minHorizontalGap": 15,
					"minVerticalGap": 15,
					"title": $chartDiv.data("yaxis-label1")
				},
				{
					"axisFrequency": -1,
					"id": "couponPercent",
					"maximum": sgdCouponMax,
					"minimum": -4,
					"position": "right",
					"precision": 0,
					"gridThickness": 0,
					"minHorizontalGap": 15,
					"minVerticalGap": 15,
					"titleRotation": 90,
					"title": $chartDiv.data("yaxis-label2")
				}
			],
			"allLabels": [],
			"balloon": {
				"fixedPosition": false
			},
			"titles": [
				{
					"id": "chartTitle",
					"text": $chartDiv.data("chart-title")
				}
			],
			"dataProvider": dataProvider
		}
	);
});
